<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.mm.order">
  	<select id="orderList" resultType="com.mm.pro.model.ProDTO">
  	select * from product where pro_idx= #{pro_idx}
  	</select>
  	<insert id="orderInsert" parameterType="com.mm.order.model.OrderDTO">
  		insert into orders values(#{order_idx}, #{user_idx}, #{order_name}, sysdate, sysdate + INTERVAL '12' MONTH, #{order_pcode}, '#{receiver}', '#{receiver_tel}', #{order_addr}, #{order_detail}, #{order_msg}, #{using_point}, TO_DATE(TO_CHAR(SYSDATE + 7, 'DD'), 'DD'), sysdate, #{amount}, 1, sysdate, #{order_tos})
	</insert>
	<insert id="order_proInsert" parameterType="com.mm.order.model.OrderProDTO">
  		insert into order_pro values(#{order_idx},#{user_idx},#{pro_idx},#{pro_amount})
	</insert>

	<select id="mySubsAllList" parameterType="Map" resultType="com.mm.order.model.MyOrderListDTO">
		select * from
			(select rownum as rnum, e.*from(
				SELECT *FROM orders o
				JOIN order_pro op ON o.order_idx = op.order_idx
				JOIN product p ON op.pro_idx = p.pro_idx
				WHERE o.user_idx = #{user_idx}
					and o.order_status=4
				order by order_date desc
			)e )f
		where rnum<![CDATA[>=]]>#{start} and rnum<![CDATA[<=]]>#{end}
	</select>
	<select id="mySubsAllListCnt" parameterType="Integer" resultType="Integer">
		select count(*) from
			orders o
		JOIN order_pro op ON o.order_idx = op.order_idx
		JOIN product p ON op.pro_idx = p.pro_idx
		WHERE o.user_idx = #{user_idx}
			and o.order_status=4
	</select>
	
 	
 	<select id="myReturnProList" resultType="com.mm.order.model.MyOrderListDTO" parameterType="Map">
	select * from
	(select rownum as rnum, e.*from(
			SELECT * FROM orders o 
			JOIN order_pro op ON o.order_idx = op.order_idx
					JOIN product p ON op.pro_idx = p.pro_idx
					JOIN turnback t ON o.order_idx = t.order_idx
				WHERE o.user_idx = #{user_idx}
					and (o.order_status=5 OR o.order_status=6 OR o.order_status=7 OR o.order_status=8)
			    and pro_name like #{fvalue}
			<choose>
				<when test="state==5">
					and (order_status = 5)
				</when>
				<when test="state==6">
					and (order_status = 6)
				</when>
				<when test="state==7">
					and (order_status = 7)
				</when>
				<when test="state==8">
					and (order_status = 8)
				</when>
			</choose>	
			order by order_date desc
			)e )f
		where rnum<![CDATA[>=]]>#{start} and rnum<![CDATA[<=]]>#{end}
 	</select>
	<select id="myReturnProListCnt" parameterType="Integer" resultType="Integer">
		select count(*) from orders o
			JOIN order_pro op ON o.order_idx = op.order_idx
				JOIN product p ON op.pro_idx = p.pro_idx
				JOIN turnback t ON o.order_idx = t.order_idx
			WHERE o.user_idx = #{user_idx}
				and (o.order_status=5 OR o.order_status=6 OR o.order_status=7 OR o.order_status=8)
				and pro_name like #{fvalue}
			 <choose>
				<when test="state==5">
					and (order_status = 5)
				</when>
				<when test="state==6">
					and (order_status = 6)
				</when>
				<when test="state==7">
					and (order_status = 7)
				</when>
				<when test="state==8">
					and (order_status = 8)
				</when>
			</choose>	
	</select>
	
	
	<select id="myOrderReport" parameterType="Map" resultType="com.mm.order.model.OrderReportDTO">
	select * from
	(select rownum as rnum, e.*from(
			select a.order_idx, d.pro_name, b.pro_amount, c.user_name, c.user_tel, a.amount, a.order_status, a.order_date,
            			a.receiver, a.receiver_tel, a.order_msg, b.pro_idx,
            			(a.order_pcode||' '||a.order_addr||' '||a.order_detail) ship_addr
				from orders a,
				     order_pro b,
				     member c,
				     product d
				where a.order_idx=b.order_idx
				    and b.pro_idx=d.pro_idx
				    and b.user_idx=c.user_idx
				    and b.user_idx=#{user_idx}
			    	and pro_name like #{fvalue}
			<choose>
				<when test="state==1">
					and (order_status = 1)
				</when>
				<when test="state==2">
					and (order_status = 2)
				</when>
				<when test="state==3">
					and (order_status = 4)
				</when>
				<when test="state==4">
					and (order_status = 4)
				</when>
				<when test="state==5">
					and (order_status = 5)
				</when>
				<when test="state==6">
					and (order_status = 6)
				</when>
				<when test="state==7">
					and (order_status = 7)
				</when>
				<when test="state==8">
					and (order_status = 8)
				</when>
			</choose>	
			order by a.order_date desc
			)e )f
		where rnum<![CDATA[>=]]>#{start} and rnum<![CDATA[<=]]>#{end}
	</select>
	<select id="myReportTotalCnt" parameterType="Map" resultType="Integer">
		select count(*) 
		from orders a,
			order_pro b,
			member c,
			product d
		where a.order_idx=b.order_idx
			and b.pro_idx=d.pro_idx
			and b.user_idx=c.user_idx
			and b.user_idx=#{user_idx}
			and pro_name like #{fvalue}
			 <choose>
				<when test="state==1">
					and (order_status = 1)
				</when>
				<when test="state==2">
					and (order_status = 2)
				</when>
				<when test="state==3">
					and (order_status = 4)
				</when>
				<when test="state==4">
					and (order_status = 4)
				</when>
				<when test="state==5">
					and (order_status = 5)
				</when>
				<when test="state==6">
					and (order_status = 6)
				</when>
				<when test="state==7">
					and (order_status = 7)
				</when>
				<when test="state==8">
					and (order_status = 8)
				</when>
			</choose>	
	</select>
	
	
	<select id="orderReport" parameterType="Map" resultType="com.mm.order.model.OrderReportDTO">
		select * from
			(select rownum as rnum, e.*from(
				select a.order_idx, d.pro_name, b.pro_amount, c.user_name, c.user_tel, a.amount, a.order_status, a.order_date,
            			a.receiver, a.receiver_tel, a.order_msg, b.pro_idx,
            			(a.order_pcode||' '||a.order_addr||' '||a.order_detail) ship_addr
				from orders a,
				     order_pro b,
				     member c,
				     product d
				where a.order_idx=b.order_idx
				    and b.pro_idx=d.pro_idx
				    and b.user_idx=c.user_idx
				order by a.order_date desc
			)e )f
		where rnum<![CDATA[>=]]>#{start} and rnum<![CDATA[<=]]>#{end}
	</select>
	<select id="reportTotalCnt" resultType="Integer">
		select count(*) from
			orders a,
			order_pro b,
			member c,
			product d
		where a.order_idx=b.order_idx
			and b.pro_idx=d.pro_idx
			and b.user_idx=c.user_idx
	</select>
	
	<select id="orderData" parameterType="Map" resultType="com.mm.order.model.OrderReportDTO">
		select a.order_idx, b.pro_idx , d.pro_name, a.user_idx, c.user_name, c.user_tel, a.amount, a.order_status, a.order_date,
            a.receiver, a.receiver_tel, a.order_msg, b.pro_amount, a.sub_start, a.sub_end,
            ('['||a.order_pcode||'] '||a.order_addr||' '||a.order_detail) ship_addr
				from orders a,
				     order_pro b,
				     member c,
				     product d
				where a.order_idx=b.order_idx
				    and b.pro_idx=d.pro_idx
				    and b.user_idx=c.user_idx
				    and a.order_idx=#{order_idx}
				    and b.pro_idx=#{pro_idx}
	</select>
	
	<update id="shipStartUpdate" parameterType="Map">
		update orders
		set order_status=2
		where order_idx in (select op.order_idx
                    		from order_pro op
                    		where op.pro_idx=#{pro_idx}
                    		)
	</update>
	
	<update id="returnApplyUpdate" parameterType="Map">
		update orders
		set order_status=5
		where order_idx in (select op.order_idx
                    		from order_pro op
                    		where op.order_idx=#{order_idx}
                                and op.pro_idx=#{pro_idx}
                    		)
	</update>
	
	<update id="returnSubmitUpdate" parameterType="Map">
		update orders o
		set o.order_status = 6
		where o.order_idx in (select op.order_idx
                    		from order_pro op
                    		where op.pro_idx=#{pro_idx}
                    		)
	</update>
	<update id="returnCancelUpdate" parameterType="Map">
		update orders o
		set o.order_status = 8
		where o.order_idx in (select op.order_idx
                    		from order_pro op
                    		where op.order_idx=#{order_idx}
                                and op.pro_idx=#{pro_idx}
                    		)
	</update>
	<update id="orderCancelUpdate" parameterType="String">
		update orders set order_status = 3 where order_idx= #{order_idx}
	</update>
  </mapper>
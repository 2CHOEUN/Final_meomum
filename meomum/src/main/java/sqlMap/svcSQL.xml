<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.mm.svc">
	<!-- 방문 견적 신청 -->
	<insert id="svcMemInsert"
		parameterType="com.mm.svc.model.SvcMemDTO">
		INSERT INTO svc_member
		VALUES(('S'||TO_CHAR(SYSDATE, 'YYYYMMDD-')||svc_member_idx.nextval),
		#{user_idx},#{user_name},#{user_tel},#{user_pcode},#{user_addr},nvl(#{user_detail},'-'),'예약확정')
	</insert>

	<insert id="svcDetailInsert" parameterType="com.mm.svc.model.SvcDetailDTO">
		INSERT INTO svc_detail
		VALUES(svc_detail_idx.nextval,('S'||TO_CHAR(SYSDATE,
		'YYYYMMDD-')||svc_member_idx.currval),#{user_idx},#{svc_type},#{svc_py},#{svc_area},nvl(#{svc_req},'없음'),#{svc_know},#{svc_pia},sysdate,'-')
	</insert>

	<insert id="svcDateInsert" parameterType="com.mm.svc.model.SvcDateDTO">
		INSERT INTO svc_date
		VALUES(svc_date_idx.nextval,('S'||TO_CHAR(SYSDATE, 'YYYYMMDD-')||svc_member_idx.currval),#{user_idx},#{svc_days},#{svc_time})
	</insert>

	<!-- 예약 시간 제약 -->
	<select id="svcTimeSelect" parameterType="String" resultType="String">
		SELECT svc_time FROM svc_date WHERE svc_days = #{svc_days}
	</select>

	<!-- 관리자: 방문 견적 신청자 리스트 -->
	<select id="svcAdminList" parameterType="Map" resultType="com.mm.svc.model.SvcSelectAllDTO">
	SELECT *
	FROM (SELECT rownum as rnum,d.* from
	    (SELECT
	        a.svc_idx, a.user_idx, a.user_name, a.user_tel,
	        b.svc_regdate,a.svc_state,
	        c.svc_days,c.svc_time
	    FROM
	        svc_member a, svc_detail b,svc_date c
	    WHERE
	        a.svc_idx = b.svc_idx and a.svc_idx=c.svc_idx
	    ORDER BY
	        a.svc_idx desc) d
	) e
	WHERE rnum <![CDATA[>= ]]>
	#{start} and rnum <![CDATA[<=]]> #{end}
	</select>
	
	<!--관리자: 방문 견적 신청자 리스트(총 게시물) -->
	<select id="svcAdminListCnt" resultType="Integer">
		SELECT count(*) 
		FROM (SELECT
	        a.svc_idx, a.user_idx, a.user_name, a.user_tel,
	        b.svc_regdate,a.svc_state,
	        c.svc_days,c.svc_time
	    FROM
	        svc_member a, svc_detail b,svc_date c
	    WHERE
	        a.svc_idx = b.svc_idx and a.svc_idx=c.svc_idx) 

	</select>
	
	<!-- 관리자: 방문 예약 리스트(캘린더)-->
	<select id="svcAdminLista" resultType="com.mm.svc.model.SvcSelectAllDTO">
	 SELECT
	        a.svc_idx, a.user_idx, a.user_name, a.user_tel,
	        b.svc_regdate,a.svc_state,
	        c.svc_days,c.svc_time
	    FROM
	        svc_member a, svc_detail b,svc_date c
	    WHERE
	        a.svc_idx = b.svc_idx and a.svc_idx=c.svc_idx
	    ORDER BY
	        a.svc_idx desc
	</select>

	<!-- 관리자: 세부 검색  -->
	<select id="svcSelectDetail" parameterType="Map" resultType="com.mm.svc.model.SvcSelectAllDTO">
    SELECT *
    FROM 
    	(SELECT rownum as rnum,d.* FROM
    	(SELECT a.svc_idx, a.user_idx, a.user_name, a.user_tel,
    			b.svc_regdate, a.svc_state, c.svc_days, c.svc_time
   		 FROM svc_member a, svc_detail b, svc_date c
    	WHERE a.svc_idx = b.svc_idx and a.svc_idx=c.svc_idx
		   <if test="minDate != null and maxDate != null">
		        AND svc_regdate BETWEEN COALESCE(#{minDate}, '1900-01-01') AND COALESCE(#{maxDate}, '9999-12-31')
		    </if>
		    <if test="minDate != null and maxDate == null">
		        AND svc_regdate <![CDATA[>=]]> #{minDate}
		    </if>
		    <if test="minDate == null and maxDate != null">
		        AND svc_regdate <![CDATA[<=]]>  #{maxDate}
		    </if>
		    <if test="keyword != null and category == 1">
		        AND user_name LIKE '%'||#{keyword}||'%'
		    </if>
		    <if test="keyword != null and category == 2">
		        AND user_tel LIKE '%'||#{keyword}||'%'
		    </if>
		    <if test="state.size() != 0">
		        <foreach item="arr" index="index" collection="state"
		            open=" AND svc_state IN (" separator="," close=")">
		            #{arr}
		        </foreach>
		    </if>
		    <if test="minDate == null and maxDate == null and keyword == null">
		        AND 1=1
		    </if>
		    ORDER BY a.svc_idx desc
    )d
    )e
   WHERE rnum <![CDATA[>= ]]>#{start} and rnum <![CDATA[<=]]> #{end}
	</select>
	
	<!-- 관리자: 세부 검색(총 게시글) -->
	<select id="svcSelectDetailCnt" resultType="Integer">
	SELECT count(*)
	FROM (
		SELECT a.svc_idx, a.user_idx, a.user_name, a.user_tel,
    	b.svc_regdate, a.svc_state, c.svc_days, c.svc_time
    	FROM svc_member a, svc_detail b, svc_date c
    	WHERE a.svc_idx = b.svc_idx and a.svc_idx=c.svc_idx
	   <if test="minDate != null and maxDate != null">
	        AND svc_regdate BETWEEN COALESCE(#{minDate}, '1900-01-01') AND COALESCE(#{maxDate}, '9999-12-31')
	    </if>
	    <if test="minDate != null and maxDate == null">
	        AND svc_regdate <![CDATA[>=]]> #{minDate}
	    </if>
	    <if test="minDate == null and maxDate != null">
	        AND svc_regdate <![CDATA[<=]]>  #{maxDate}
	    </if>
	    <if test="keyword != null and category == 1">
	        AND user_name LIKE '%'||#{keyword}||'%'
	    </if>
	    <if test="keyword != null and category == 2">
	        AND user_tel LIKE '%'||#{keyword}||'%'
	    </if>
	    <if test="state.size() != 0">
	        <foreach item="arr" index="index" collection="state"
	            open=" AND svc_state IN (" separator="," close=")">
	            #{arr}
	        </foreach>
	    </if>
	    <if test="minDate == null and maxDate == null and keyword == null">
	        AND 1=1
	    </if>
    	)
	</select>
	
	<!-- 관리자/사용자: 방문 예약 상세 정보(방문 견적) -->
	<select id="svcContent" parameterType="String" resultType="com.mm.svc.model.SvcContentDTO">
		SELECT a.*,b.user_name,
		b.user_tel,b.user_pcode,b.user_addr,b.user_detail,b.svc_state,c.svc_days,c.svc_time
		FROM svc_detail a
		LEFT JOIN svc_member b on a.svc_idx = b.svc_idx
		LEFT JOIN svc_date c on b.svc_idx = c.svc_idx
		WHERE b.svc_idx = #{svc_idx}
	</select>
	
	<!-- 관리자/사용자: 방문 예약 상세 정보(정리일상) -->
	<select id="svcIngContent" parameterType="String" resultType="com.mm.svc.model.SvcIngDTO">
		SELECT *
		FROM svc_ing 
		WHERE svc_idx = #{svc_idx}
	</select>

	<!-- 관리자: 정리일상 견적 추가 -->
	<insert id="svcIngInsert" parameterType="com.mm.svc.model.SvcIngDTO">
		INSERT INTO svc_ing 
		VALUES (svc_ing_idx.nextval,#{svc_idx},#{user_idx},nvl(#{svc_datetime},'-'), #{estimated},#{discount},#{type},#{total},#{pay_state})
	</insert>
	
	<!-- 관리자/사용자: 방문 예약 정보 수정(방문 견적) -->
	<update id="svcMemUpdate" parameterType="com.mm.svc.model.SvcMemDTO">
		UPDATE svc_member
		SET user_name = #{user_name},
		user_tel=#{user_tel},
		user_pcode=#{user_pcode},
		user_addr=#{user_addr},
		user_detail=nvl(#{user_detail},'-'),
		svc_state=#{svc_state}
		WHERE svc_idx = #{svc_idx}
	</update>

	<update id="svcDetailUpdate" parameterType="com.mm.svc.model.SvcDetailDTO">
		UPDATE svc_detail
		SET svc_type=#{svc_type},
		svc_py=#{svc_py},
		svc_area=#{svc_area},
		svc_req=nvl(#{svc_req},'-'),
		svc_memo=nvl(#{svc_memo},'-')
		WHERE svc_idx = #{svc_idx}
	</update>

	<update id="svcDateUpdate" parameterType="com.mm.svc.model.SvcDateDTO">
		UPDATE svc_date
		SET svc_days=#{svc_days},
		svc_time=#{svc_time}
		WHERE svc_idx = #{svc_idx}
	</update>
	
	<!-- 관리자/사용자: 방문 예약 정보 수정(정리일상 견적) -->
	<update id="svcIngUpdate" parameterType="com.mm.svc.model.SvcIngDTO">
		UPDATE svc_ing
		SET svc_datetime = #{svc_datetime},
			estimated = #{estimated},
			discount = #{discount},
			type = #{type},
			total = #{total},
			pay_state = #{pay_state}
		WHERE svc_idx = #{svc_idx}
	</update>
	
<!-- 	<update id="svcStateUpdate" parameterType="com.mm.svc.model.SvcMemDTO"> 
		UPDATE svc_member
		SET svc_state = #{svc_state}
		WHERE svc_idx =#{svc_idx}
	</update> -->
	
	<!--마이페이지 : 방문 견적 예약 내역 -->
	<select id="svcUserList" parameterType="Map" resultType="com.mm.svc.model.SvcSelectAllDTO">
	    SELECT * 
	    FROM (SELECT rownum as rnum,d.* FROM 
	        (SELECT a.svc_idx, a.user_idx, a.user_name, a.user_tel, 
	                b.svc_regdate, 
	                a.svc_state, 
	                c.svc_days, c.svc_time
	            FROM svc_member a
	            LEFT JOIN svc_detail b ON a.svc_idx = b.svc_idx
	            LEFT JOIN svc_date c ON a.svc_idx = c.svc_idx
	            WHERE a.user_idx = #{user_idx} and (a.svc_state='예약확정' or a.svc_state='예약취소')
	            ORDER BY a.svc_idx DESC 
	        ) d
	    ) e
	    WHERE rnum <![CDATA[>=]]> #{start} and rnum <![CDATA[<=]]> #{end}
	</select>
	
	<!-- 마이페이지: 방문 견적 예약 내역(총 게시물) -->
	<select id="svcUserListCnt" resultType="Integer">
		SELECT count(*)
		FROM (SELECT a.svc_idx, a.user_idx, a.user_name, a.user_tel, 
	                b.svc_regdate, 
	                a.svc_state, 
	                c.svc_days, c.svc_time
	          FROM svc_member a
	          LEFT JOIN svc_detail b ON a.svc_idx = b.svc_idx
	          LEFT JOIN svc_date c ON a.svc_idx = c.svc_idx
	          WHERE a.user_idx = #{user_idx} and (a.svc_state='예약확정' or a.svc_state='예약취소'))
	</select>
	
	<!--마이페이지: 정리일상 진행 현황 -->
	<select id="svcIngList" parameterType="Map" resultType="com.mm.svc.model.SvcIngDTO">
	SELECT *
	FROM(SELECT rownum as rnum,a.* from
		(SELECT * 
		FROM svc_ing
		WHERE user_idx = #{user_idx}
		ORDER BY  svc_ing_idx DESC
		)a
	)b
	WHERE rnum <![CDATA[>=]]> #{start} and rnum <![CDATA[<=]]> #{end}
	</select>
	
	<!--마이페이지: 정리일상 진행 현황 총 게시글 -->
	<select id="svcIngListCnt" parameterType="Map" resultType="Integer">
	SELECT count(*)
	FROM (SELECT * 
		FROM svc_ing
		WHERE user_idx = #{user_idx}
	)
	</select>
	
	<!-- 정리일상 결제시 상태 변경(svc_member) -->
	<update id="updateSvcState" parameterType="com.mm.svc.model.IdxDTO">
		UPDATE svc_member 
		SET svc_state = '결제완료'
		WHERE svc_idx =#{svc_idx}
	</update>
	
	<!-- 정리일상 결제시 상태 변경(svc_ing) -->
	<update id="updatePayState" parameterType="com.mm.svc.model.IdxDTO">
		UPDATE svc_ing
		SET pay_state = '결제완료'
		WHERE svc_idx =#{svc_idx}
	</update>
	
	<!-- 마이페이지: 방문 예약 취소 -->
	<update id="svcStateCancle" parameterType="com.mm.svc.model.SvcContentDTO">
	UPDATE svc_member
	SET svc_state='예약취소'
	WHERE svc_idx=#{svc_idx}
	</update>
	
	<update id="svcDateCancle" parameterType="com.mm.svc.model.SvcContentDTO">
	UPDATE svc_date
	SET svc_days='C'||#{svc_days},
		svc_time='C'||#{svc_time}
	WHERE svc_idx=#{svc_idx}
	</update>
	
	<!-- 캘린더용 -->
	<select id="svcIngCalList" resultType="com.mm.svc.model.SvcIngDTO">
		select * from svc_ing
	</select>
	
	<select id="sveIngCalName" resultType="String" parameterType="String">
		select user_name from svc_member where svc_idx = #{svc_idx}
	</select>

</mapper>
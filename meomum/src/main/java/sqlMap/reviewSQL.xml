<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.mm.review">
	<insert id="reviewInsert" parameterType="com.mm.review.model.ReviewDTO">
		insert into
			review
		values(
			review_idx.nextval,
			#{user_idx},
			<choose>
	            <when test="category=='정리일상'">
	                'svc_idx'
	            </when>
	            <when test="category=='구독일상'">
	                'order_idx'
	            </when>
        	</choose>,
			#{category},
			#{activity_idx},
			#{writer},
			#{star},
			#{subject},
			#{content},
			sysdate,
			0,
			#{thumb}
		)
	</insert>
	
	<!-- main reviewList -->
	<select id="reviewList" parameterType="Map" resultType="com.mm.review.model.ReviewDTO">
		select * from
		(select rownum as rnum, a.* from(
		
			select * from review
			where (subject like #{fvalue} or content like #{fvalue})
			
			<choose>
				<when test="category==2">
				and (category = '정리일상')
				</when>
			<when test="category==3">
				and (category = '구독일상')
				</when>
			</choose>
			order by review_idx desc
			
		)a )b
		where rnum<![CDATA[>=]]>#{start} and rnum<![CDATA[<=]]>#{end}
	</select>
	
	
	
	
	<select id="reviewTotalCnt" resultType="Integer" parameterType="Map">
		select count(*) from review
		where (subject like #{fvalue} or content like #{fvalue})
			
			<choose>
				<when test="category==2">
				and (category = '정리일상')
				</when>
			<when test="category==3">
				and (category = '구독일상')
				</when>
			</choose>
	</select>
	
	<!-- mypage reviewList -->	
	<select id="myreviewList" parameterType="Map" resultType="com.mm.review.model.ReviewDTO">
		select * from
		(select rownum as rnum, a.*from(
			select * from review where user_idx=#{user_idx} order by review_idx desc
		)a )b
		where rnum<![CDATA[>=]]>#{start} and rnum<![CDATA[<=]]>#{end}
	</select>
	
	<select id="myreviewTotalCnt" resultType="Integer">
		select count(*) from
			review
		where user_idx=#{user_idx}
	</select>

	<!-- mypage reviewable -->
	<select id="reviewableList" parameterType="Map" resultType="com.mm.review.model.ReviewDTO">
		select * from
		(select rownum as rnum, d.*from(
			SELECT svc_idx AS activity_idx, user_idx, user_name AS writer
			FROM svc_member a
			WHERE a.user_idx = #{user_idx}
			    AND svc_state = '작업완료'
			    AND NOT EXISTS (SELECT *
			                    FROM review b
			                    WHERE a.svc_idx = b.activity_idx)
			UNION ALL
			SELECT order_idx AS activity_idx, user_idx, order_name AS writer
			FROM orders c
			WHERE c.user_idx = #{user_idx}
			    AND order_status = 4
			    AND NOT EXISTS (SELECT *
			                    FROM review b
			                    WHERE c.order_idx = b.activity_idx)	
			)d 
		)e
		where rnum<![CDATA[>=]]>#{start} and rnum<![CDATA[<=]]>#{end}
	</select>
	
	<select id="reviewableTotalCnt" parameterType="Integer" resultType="Integer">
		select count(*) 
		from
		(
			SELECT svc_idx AS activity_idx, user_idx, user_name AS writer
			FROM svc_member a
			WHERE a.user_idx = 9
			    AND svc_state = '작업완료'
			    AND NOT EXISTS (SELECT *
			                    FROM review b
			                    WHERE a.svc_idx = b.activity_idx)
			UNION ALL
			SELECT order_idx AS activity_idx, user_idx, order_name AS writer
			FROM orders c
			WHERE c.user_idx = 9
			    AND order_status = 4
			    AND NOT EXISTS (SELECT *
			                    FROM review b
			                    WHERE c.order_idx = b.activity_idx)	
		)
	</select>


	<select id="reviewContent" parameterType="Integer" resultType="com.mm.review.model.ReviewDTO">
		select * from review
		where review_idx=#{review_idx}
	</select>
	
	<update id="reviewReadnum" parameterType="Integer" >
		update review
		set readnum=readnum+1
		where review_idx=#{review_idx}
	</update>
	
	
	<delete id="reviewDelete" parameterType="Integer">
		delete from review 
		where review_idx=#{review_idx}
	</delete>
	
	<update id="reviewUpdate" parameterType="com.mm.review.model.ReviewDTO">
		update review
		set subject=#{subject}, content=#{content}, thumb=#{thumb} , star=#{star}
		where review_idx=#{review_idx}
	</update>
</mapper>
